---
- name: Ensure unzip is installed
  become: true
  ansible.builtin.apt:
    state: present
    update_cache: true
    cache_valid_time: 3600  # Do not update if already done in the last hour.
    pkg:
      - unzip
  tags:
    - installation

- name: Ensure OpenVPN is installed
  become: true
  ansible.builtin.apt:
    state: present
    update_cache: true
    cache_valid_time: 3600  # Do not update if already done in the last hour.
    pkg:
      - openvpn
  tags:
    - installation

- name: Ensure /etc/openvpn/nordvpn/ exists
  become: true
  ansible.builtin.file:
    state: directory
    path: /etc/openvpn/nordvpn/
    mode: 0640

- name: Download OpenVPN configurations
  become: true
  ansible.builtin.get_url:
    url: "{{ nordvpn_openvpn_url }}"
    dest: "/etc/openvpn/nordvpn/ovpn.zip"
    force: true
    owner: root
    group: root
    mode: 0640

- name: Extract OpenVPN configurations
  become: true
  ansible.builtin.unarchive:
    remote_src: true
    src: /etc/openvpn/nordvpn/ovpn.zip
    dest: /etc/openvpn/nordvpn/
    owner: root
    group: root
    mode: 0640

# Note: Change profile before copying to ensure idempotence
- name: Ensure credentials file is referenced in wanted profile
  become: true
  ansible.builtin.lineinfile:
    path: "{{ nordvpn_config }}"
    regexp: '^auth-user-pass'
    line: 'auth-user-pass /etc/openvpn/nordvpn/credentials.cred'
    owner: root
    group: root
    mode: 0644

- name: Ensure wanted OpenVPN configuration is active
  become: true
  ansible.builtin.copy:
    remote_src: true
    src: "{{ nordvpn_config }}"
    dest: /etc/openvpn/nordvpn/active.ovpn
    owner: root
    group: root
    mode: 0640

- name: Ensure credentials file
  become: true
  ansible.builtin.template:
    src: templates/credentials.cred.j2
    dest: /etc/openvpn/nordvpn/credentials.cred
    owner: root
    group: root
    mode: 0644